// ClassTestApp.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <string>

//---Человечек--------------------------------------------------------
class Walker
{
private:
    int coin;
    std::string name;
    Walker(std::string name) {
        coin = 0;
        this->name = name;
    }  // конструктор недоступен
    ~Walker() {} // и деструктор

    // необходимо также запретить копирование 
    Walker(Walker const&); // реализация не нужна ( = delete)
    Walker& operator= (Walker const&);  // и тут ( = delete)
public:
    static Walker& Instance(std::string name)
    {
        // согласно стандарту, этот код ленивый и потокобезопасный
        static Walker s(name);
        return s;
    }

    void getWallet() {
        std::cout << std::to_string(coin) << std::endl;
    }
    void getName() {
        std::cout << name << std::endl;
    }
};
//--------------------------------------------------------------------

int main()
{
    std::cout << "1st pos\n";
    Walker& Humn = Walker::Instance("bob");
    Humn.getName();
    Humn.getWallet();

    std::cout << "End pos\n";
    system("pause");
    return 0;
}

//--------------------------------------------------------------------
//--------------------------------------------------------------------

//---Фабрика-комнат---------------------------------------------------

//---Комнаты----------------------------------------------------------
__interface IRoom	//Интерфейс комнат
{

};
//--------------------------------------------------------------------
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
